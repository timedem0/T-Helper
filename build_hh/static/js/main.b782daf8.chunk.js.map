{"version":3,"sources":["components/Home.js","components/SaveCustomer.js","components/Customers.js","components/SaveTraining.js","components/Trainings.js","components/Calendar.js","components/About.js","components/Navigator.js","App.js","serviceWorker.js","index.js"],"names":["randomWords","require","Home","params","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadCustomers","fetch","then","response","json","responseData","x","Math","round","content","length","state","target","setState","fetchInProgress","customersNo","percent","handleTargetChange","value","addCustomer","firstLetterUppercase","randomWord","charAt","toUpperCase","slice","newCustomer","firstname","lastname","streetaddress","floor","random","postcode","city","email","phone","method","headers","Content-Type","body","JSON","stringify","notification","success","message","description","getRandomCustomer","responseArray","indexArray","i","link","links","href","index","substr","lastIndexOf","randomIndex","deleteCustomer","concat","_this2","react_default","a","createElement","style","marginTop","marginLeft","marginRight","height","maxWidth","spin","size","es_alert","type","marginBottom","backgroundColor","padding","badge","count","boxShadow","slider","min","max","defaultValue","onChange","tooltip","title","placement","popconfirm","okText","onConfirm","icon","color","es_button","shape","progress","strokeWidth","okType","Component","SaveCustomer","props","handleChange","event","defineProperty","name","saveCustomer","visible","showDrawer","closeDrawer","onClick","drawer","width","onClose","maskClosable","overflow","paddingBottom","es_row","input","Group","col","span","placeholder","prefix","required","TextArea","rows","addonBefore","position","bottom","borderTop","textAlign","left","background","borderRadius","config","duration","Customers","listCustomers","customers","customer","renderEditable","cellInfo","contentEditable","suppressContentEditableWarning","onBlur","e","data","toConsumableArray","column","id","innerHTML","dangerouslySetInnerHTML","__html","updateCustomer","showTrainings","trainings","filterMethod","filter","row","undefined","String","toLowerCase","startsWith","columnsTrainings","columns","Header","accessor","filterable","Cell","moment","original","date","format","columnsCustomers","components_SaveCustomer","sortable","_ref","_ref2","es","defaultPageSize","showPagination","showPageJump","defaultFilterMethod","SaveTraining","handleSelectChange","handleSliderChange","handleDateChange","saveTraining","newTraining","activity","importCustomers","customerToAdd","es_select","map","item","key","Option","date_picker","showTime","onOk","Trainings","listTrainings","makeProperList","trainingArray","Date","location","properTrainingList","deleteTraining","components_SaveTraining","localizer","BigCalendar","momentLocalizer","MyCalendar","loadTrainings","createEventList","eventArray","start","end","allDay","events","lib_default","defaultDate","views","startAccessor","endAccessor","About","timeline","pending","mode","Item","dot","fontSize","theme","display","Navigator","menu","Link","to","twoToneColor","App","document","className","BrowserRouter","basename","components_Navigator","Switch","Route","exact","path","component","Calendar","render","Boolean","window","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4XAKIA,SAAcC,EAAQ,MA6JXC,cAzJb,SAAAA,EAAYC,GAAQ,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAClBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAUTQ,cAAgB,WACfC,MAAM,oDACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAIC,EAAIC,KAAKC,MAAqC,IAA9BH,EAAaI,QAAQC,OAAejB,EAAKkB,MAAMC,OAAU,KAAK,IAClFnB,EAAKoB,SAAS,CAAEC,iBAAiB,EAAOC,YAAaV,EAAaI,QAAQC,OAAQM,QAASV,OAhB3Eb,EAoBpBwB,mBAAqB,SAACC,GACpB,IAAIZ,EAAIC,KAAKC,MAAgC,IAAzBf,EAAKkB,MAAMI,YAAoBG,EAAS,KAAK,IACjEzB,EAAKoB,SAAS,CAAED,OAAQM,EAAQF,QAASV,KAtBvBb,EAyBpB0B,YAAc,WACZ,SAASC,EAAqBC,GAC5B,OAAOA,EAAWC,OAAO,GAAGC,cAAgBF,EAAWG,MAAM,GAE/D,IAAIC,EAAc,CAChBC,UAAWN,EAAqB/B,KAChCsC,SAAUP,EAAqB/B,KAC/BuC,cAAeR,EAAqB/B,KAAiB,IAAMkB,KAAKsB,MAAuB,GAAhBtB,KAAKuB,SAAiB,IAC7FC,SAAUxB,KAAKsB,MAAuB,MAAhBtB,KAAKuB,SAAoB,KAC/CE,KAAMZ,EAAqB/B,KAC3B4C,MAAO5C,IAAgB,IAAMA,IAAgB,OAC7C6C,MAAO3B,KAAKsB,MAAuB,WAAhBtB,KAAKuB,SAAyB,MAErD7B,MAAM,mDACF,CACAkC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUf,KAGxBvB,KAAK,SAAAC,GACLV,EAAKO,gBACLyC,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,iDAjDKnD,EAsDpBoD,kBAAoB,WAClB5C,MAAM,oDACPC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAKF,IAFA,IAAIyC,EAAgB,CAACzC,EAAaI,SAC9BsC,EAAa,GACRC,EAAI,EAAGA,EAAIF,EAAc,GAAGpC,OAAQsC,IAAK,CAChD,IAAIC,EAAQH,EAAc,GAAGE,GAAGE,MAAM,GAAGC,KACrCC,EAAQH,EAAKI,OAAOJ,EAAKK,YAAY,KAAO,GAChDP,EAAWC,GAAKI,EAGlB,IAAIG,EAAcR,EAAWxC,KAAKsB,MAAMtB,KAAKuB,SAASiB,EAAWrC,SAEjEjB,EAAK+D,eAAeD,MAtEJ9D,EA0EpB+D,eAAiB,SAACJ,GAClBnD,MAAK,oDAAAwD,OAAqDL,GAAS,CAACjB,OAAQ,WAC3EjC,KAAK,SAAAC,GACLV,EAAKO,gBACLyC,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,yCAhFK,OAIpBnD,EAAKkB,MAAQ,CAAEG,iBAAiB,EAAMC,YAAa,GAAIH,OAD7C,GACwDI,QAFxD,GAFUvB,mFAQpBG,KAAKI,iDA6EI,IAAA0D,EAAA9D,KACP,OACE+D,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,GAAIC,WAAY,OAAQC,YAAa,OAAQC,OAAQ,OAAQC,SAAU,SAC9FR,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,gJACAF,EAAAC,EAAAC,cAAA,yIACAF,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WAEJjE,KAAKe,MAAMG,gBACT6C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,KAAK,UACXV,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACE3B,QAAQ,0BACRC,YAAY,qHACZ2B,KAAK,UAITZ,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEU,aAAc,KAC1Bb,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEW,gBAAiB,2BAA4BC,QAAS,GAAIV,WAAY,OAAQC,YAAa,OAAQE,SAAU,MACzHR,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,oBAAL,0CAA0DF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,MAAOhF,KAAKe,MAAMI,YAAa+C,MAAO,CAAEW,gBAAiB,UAAWI,UAAW,cAChJlB,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,mBAAL,oDAAmEF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAOC,MAAOhF,KAAKe,MAAMC,OAAQkD,MAAO,CAAEW,gBAAiB,UAAWI,UAAW,eAEtJlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEE,WAAY,OAAQC,YAAa,OAAQE,SAAU,MAC/DR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,IAAK,EACLC,IAAK,GACLC,aAAc,GACdC,SAAUtF,KAAKqB,sBAGnB0C,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASC,MAAM,kCAAkCC,UAAU,QACzD1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEF,MAAM,kDACNC,UAAU,cACVE,OAAO,gCACPC,UAAW,kBAAM9B,EAAKvC,eACtBsE,KAAM9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,oBAAoBT,MAAO,CAAE4B,MAAO,YAErD/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUqB,MAAM,SAASvB,KAAK,QAAQoB,KAAK,OAAO3B,MAAO,CAAEG,YAAa,QAGzFN,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAUtB,KAAK,SAASuB,YAAa,EAAG9E,QAASpB,KAAKe,MAAMK,UAC5D2C,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASC,MAAM,qCAAqCC,UAAU,SAC5D1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEF,MAAM,8CACNC,UAAU,aACVE,OAAO,gCACPQ,OAAO,SACPP,UAAW,kBAAM9B,EAAKb,qBACtB4C,KAAM9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,oBAAoBT,MAAO,CAAE4B,MAAO,UAErD/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,SAASqB,MAAM,SAASvB,KAAK,QAAQoB,KAAK,QAAQ3B,MAAO,CAAEE,WAAY,QAGxFL,EAAAC,EAAAC,cAAA,WAAMF,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAA,6CAnJKmC,qGCsGJC,cAtGb,SAAAA,EAAYC,GAAO,IAAAzG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqG,IACjBxG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuG,GAAAlG,KAAAH,KAAMsG,KAIRC,aAAe,SAACC,GACd3G,EAAKoB,SAALnB,OAAA2G,EAAA,EAAA3G,CAAA,GAAgB0G,EAAMxF,OAAO0F,KAAOF,EAAMxF,OAAOM,SANhCzB,EASnB8G,aAAe,WACb,IAAM9E,EAAc,CAClBC,UAAWjC,EAAKkB,MAAMe,UACtBC,SAAUlC,EAAKkB,MAAMgB,SACrBC,cAAenC,EAAKkB,MAAMiB,cAC1BG,SAAUtC,EAAKkB,MAAMoB,SACrBC,KAAMvC,EAAKkB,MAAMqB,KACjBC,MAAOxC,EAAKkB,MAAMsB,MAClBC,MAAOzC,EAAKkB,MAAMuB,OAEpBzC,EAAKyG,MAAMK,aAAa9E,GACxBhC,EAAKoB,SAAS,CAAE2F,SAAS,EAAO9E,UAAW,GAAIC,SAAU,GAAIC,cAAe,GAAIG,SAAU,GAAIC,KAAM,GAAIC,MAAO,GAAIC,MAAO,MApBzGzC,EAuBnBgH,WAAa,WACXhH,EAAKoB,SAAS,CACZ2F,SAAS,KAzBM/G,EA6BnBiH,YAAc,WACZjH,EAAKoB,SAAS,CACZ2F,SAAS,KA7BX/G,EAAKkB,MAAQ,CAAE6F,SAAS,EAAQ9E,UAAW,GAAIC,SAAU,GAAIC,cAAe,GAAIG,SAAS,GAAIC,KAAK,GAAIC,MAAM,GAAIC,MAAM,IAFrGzC,wEAqCjB,OACEkE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQtB,KAAK,QAAQE,KAAK,UAAUoC,QAAS/G,KAAK6G,YAAlD,oBAGA9C,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACExB,MAAM,eACNyB,MAAO,IACPxB,UAAU,QACVyB,QAASlH,KAAK8G,YACdK,cAAc,EACdP,QAAS5G,KAAKe,MAAM6F,QACpB1C,MAAO,CACLI,OAAQ,oBACR8C,SAAU,OACVC,cAAe,KAGjBtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAMC,MAAP,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKC,KAAM,IAAI3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,aAAajB,KAAK,YAAYpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMe,UAAW8F,OAAQ7D,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,OAAOT,MAAO,CAAE4B,MAAO,mBAAqB+B,UAAQ,OACjM9D,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKC,KAAM,IAAI3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,YAAYjB,KAAK,WAAWpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMgB,SAAU6F,OAAQ7D,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,OAAOT,MAAO,CAAE4B,MAAO,0BAGrK/B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAA,EAAMO,SAAP,CAAgBC,KAAM,EAAGJ,YAAY,UAAUjB,KAAK,gBAAgBpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMiB,iBAEvH+B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAMC,MAAP,KACEzD,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKC,KAAM,IAAI3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,WAAWjB,KAAK,WAAWpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMoB,YAC5G4B,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAKC,KAAM,IAAI3D,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,OAAOjB,KAAK,OAAOpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMqB,UAGxG2B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,QAAQjB,KAAK,QAAQpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMsB,SAE3F0B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACIvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,QAAQjB,KAAK,QAAQsB,YAAY,OAAO1C,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMuB,SAE9GyB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAKpD,MAAO,CACR+D,SAAU,WACVC,OAAQ,EACRjB,MAAO,OACPkB,UAAW,oBACXrD,QAAS,YACTsD,UAAW,QACXC,KAAM,EACNC,WAAY,OACZC,aAAc,gBAEhBxE,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,MAAO,CAAEG,YAAa,GAAK0C,QAAS/G,KAAK8G,aAAjD,UACA/C,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUoC,QAAS/G,KAAK2G,cAArC,kBA/FeP,aCK3BvD,IAAa2F,OAAO,CAClB/C,UAAW,cACXyC,OAAQ,GACRO,SAAU,QA8PGC,cAzPd,SAAAA,EAAY9I,GAAQ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,IACnB7I,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4I,GAAAvI,KAAAH,KAAMJ,KAQP+I,cAAgB,WACftI,MAAM,oDACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACLZ,EAAKoB,SAAS,CAAC2H,UAAWnI,EAAaI,aAbrBhB,EAiBpB8G,aAAe,SAACkC,GACfxI,MAAM,mDACF,CACAkC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUiG,KAGxBvI,KAAK,SAAAC,GACLV,EAAK8I,gBACL9F,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,+CA7BInD,EAkCpBiJ,eAAiB,SAACC,GACjB,OACChF,EAAAC,EAAAC,cAAA,OACCC,MAAO,CAAEW,gBAAiB,WAC1BmE,iBAAe,EACfC,gCAA8B,EAC9BC,OAAQ,SAAAC,GACP,IAAMC,EAAItJ,OAAAuJ,EAAA,EAAAvJ,CAAOD,EAAKkB,MAAM6H,WAC5BQ,EAAKL,EAASvF,OAAOuF,EAASO,OAAOC,IAAMJ,EAAEnI,OAAOwI,UACpD3J,EAAKoB,SAAS,CAAE2H,UAAWQ,KAE5BK,wBAAyB,CACxBC,OAAQ7J,EAAKkB,MAAM6H,UAAUG,EAASvF,OAAOuF,EAASO,OAAOC,QA9C7C1J,EAoDpB8J,eAAiB,SAACd,EAAUxF,GAC3BhD,MAAMgD,EACH,CACAd,OAAQ,MACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUiG,KAGvBvI,KAAK,SAAAC,GACLV,EAAK8I,gBACL9F,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,8CAhEInD,EAqEpB+D,eAAiB,SAACP,GACjBhD,MAAMgD,EAAM,CAACd,OAAQ,WACpBjC,KAAK,SAAAC,GACLV,EAAK8I,gBACL9F,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,8CA3EInD,EAgFpB+J,cAAgB,SAACtI,GAChBjB,MAAMiB,EAAQ,aAAc,CAAEiB,OAAQ,QACrCjC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACLZ,EAAKoB,SAAS,CAAC2F,SAAS,EAAMiD,UAAWpJ,EAAaI,aApFpChB,EAwFpBgH,WAAa,WACVhH,EAAKoB,SAAS,CACZ2F,SAAS,KA1FM/G,EA8FnBiH,YAAc,WACZjH,EAAKoB,SAAS,CACZ2F,SAAS,KAhGM/G,EAoGpBiK,aAAe,SAACC,EAAQC,GACrB,IAAMT,EAAKQ,EAAOR,GAClB,YAAmBU,IAAZD,EAAIT,IAAoBW,OAAOF,EAAIT,GAAIY,eAAeC,WAAWL,EAAOzI,MAAM6I,gBApGvFtK,EAAKkB,MAAQ,CAAC6F,SAAS,EAAOgC,UAAW,GAAIiB,UAAW,IAFrChK,mFAMnBG,KAAK2I,iDAmGI,IAAA7E,EAAA9D,KAEHqK,EAAmB,CAAC,CACzBC,QAAS,CAAC,CACTC,OAAQ,WACRC,SAAU,YACR,CACFD,OAAQ,WACRC,SAAU,YACR,CACFD,OAAQ,OACRC,SAAU,OACVC,YAAY,EACZC,KAAM,SAAAV,GACL,OAAOjG,EAAAC,EAAAC,cAAA,WACL0G,IAAOX,EAAIY,SAASC,MAAMC,OAAO,qBAMhCC,EAAmB,CAAC,CACzBR,OAAQxG,EAAAC,EAAAC,cAAC+G,EAAD,CAAcrE,aAAc3G,KAAK2G,eACzC2D,QAAS,CAAC,CACTC,OAAQ,aACRC,SAAU,YACVE,KAAM1K,KAAK8I,gBACT,CACFyB,OAAQ,YACRC,SAAU,WACVE,KAAM1K,KAAK8I,gBACT,CACFyB,OAAQ,YACRC,SAAU,eACVC,YAAY,EACZQ,UAAU,EACVP,KAAM,SAAAQ,GAAa,IAAX5J,EAAW4J,EAAX5J,MACP,OAAOyC,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASC,MAAM,gCACdzB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQC,MAAM,SAASH,KAAK,OAAOpB,KAAK,QAAQsC,QAAS,kBAAMjD,EAAK8F,cAActI,YAKpF,CACFiJ,OAAQ,WACRD,QAAS,CAAC,CACTC,OAAQ,SACRC,SAAU,gBACVE,KAAM1K,KAAK8I,gBACT,CACFyB,OAAQ,YACRC,SAAU,WACVE,KAAM1K,KAAK8I,gBACT,CACFyB,OAAQ,OACRC,SAAU,OACVE,KAAM1K,KAAK8I,kBAEV,CACFyB,OAAQ,UACRD,QAAS,CAAC,CACTC,OAAQ,QACRC,SAAU,QACVE,KAAM1K,KAAK8I,gBACT,CACFyB,OAAQ,QACRC,SAAU,QACVE,KAAM1K,KAAK8I,kBAEV,CACFyB,OAAQ,UACRhG,SAAU,IACV+F,QAAS,CAAC,CACTC,OAAQ,gBACRC,SAAU,eACVC,YAAY,EACZQ,UAAU,EACV1G,SAAU,IACVmG,KAAM,SAAAS,GAAkB,IAAhBnB,EAAgBmB,EAAhBnB,IAAK1I,EAAW6J,EAAX7J,MACZ,OAAOyC,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAAC8B,EAAA,EAAOyB,MAAR,KACCzD,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACCF,MAAM,iDACNC,UAAU,OACVE,OAAO,qBACPC,UAAW,kBAAM9B,EAAK6F,eAAeK,EAAK1I,KAE1CyC,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUkB,KAAK,OAAOpB,KAAK,WAEzCV,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACCF,MAAM,iDACNC,UAAU,WACVE,OAAO,wBACPQ,OAAO,SACPP,UAAW,kBAAM9B,EAAKF,eAAetC,IACrCuE,KAAM9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,oBAAoBT,MAAO,CAAE4B,MAAO,UAErD/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUkB,KAAK,SAASpB,KAAK,kBAQ9C,OACEV,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,GAAIS,aAAc,IAAKR,WAAY,OAAQC,YAAa,OAAQC,OAAQ,OAAQC,SAAU,SACjHR,EAAAC,EAAAC,cAAA,2BACJF,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACMxB,MAAM,YACNyB,MAAO,IACPxB,UAAU,OACVyB,QAASlH,KAAK8G,YACdK,cAAc,EACdP,QAAS5G,KAAKe,MAAM6F,QACpB1C,MAAO,CACLI,OAAQ,oBACd8C,SAAU,OACVgB,UAAW,SACLf,cAAe,KAGjBtD,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACJhC,KAAMpJ,KAAKe,MAAM8I,UACjBS,QAASD,EACTY,UAAU,EACVI,gBAAiB,GACjBC,gBAAgB,EAChBC,cAAc,KAGhBxH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACChC,KAAMpJ,KAAKe,MAAM6H,UACjB0B,QAASS,EACTE,UAAU,EACVR,YAAU,EAACe,oBAAqBxL,KAAK8J,aACrCuB,gBAAiB,aApPEjF,+BCkJTqF,cA3Jb,SAAAA,EAAYnF,GAAO,IAAAzG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyL,IACjB5L,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2L,GAAAtL,KAAAH,KAAMsG,KAQRC,aAAe,SAACC,GACd3G,EAAKoB,SAALnB,OAAA2G,EAAA,EAAA3G,CAAA,GAAgB0G,EAAMxF,OAAO0F,KAAOF,EAAMxF,OAAOM,SAVhCzB,EAgBnB6L,mBAAqB,SAACpK,GACpBzB,EAAKoB,SAAS,CAAE4H,SAAUvH,KAjBTzB,EAoBnB8L,mBAAqB,SAACrK,GACpBzB,EAAKoB,SAAS,CAAEwH,SAAUnH,KArBTzB,EAwBnB+L,iBAAmB,SAACtK,GAClBzB,EAAKoB,SAAS,CAAE4J,KAAMvJ,KAzBLzB,EA4BnBgM,aAAe,WACb,IAAMC,EAAc,CAClBC,SAAUlM,EAAKkB,MAAMgL,SACrBtD,SAAU5I,EAAKkB,MAAM0H,SACrBoC,KAAMhL,EAAKkB,MAAM8J,KACjBhC,SAAUhJ,EAAKkB,MAAM8H,UAEvBhJ,EAAKyG,MAAMuF,aAAaC,GACxBjM,EAAKoB,SAAS,CAAE2F,SAAS,EAAOmF,SAAU,GAAItD,SAAU,GAAIoC,KAAM,GAAIhC,SAAU,MApC/DhJ,EAuCnBmM,gBAAkB,WAChB3L,MAAM,oDACPC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,IAAK,IAAI2C,EAAI,EAAGA,EAAI3C,EAAaI,QAAQC,OAAQsC,IAAM,CACrD,IAAI6I,EAAgB,CAElBpD,SAAQ,GAAAhF,OAAKpD,EAAaI,QAAQuC,GAAGrB,SAA7B,KAAA8B,OAAyCpD,EAAaI,QAAQuC,GAAGtB,WACzEuB,KAAM5C,EAAaI,QAAQuC,GAAGE,MAAM,GAAGC,MAEzC1D,EAAKoB,SAAS,CACZ2H,UAAU9I,OAAAuJ,EAAA,EAAAvJ,CAAKD,EAAKkB,MAAM6H,WAAjB/E,OAAA,CAA4BoI,MAKzCpM,EAAKoB,SAAS,CACZ4H,SAAUhJ,EAAKkB,MAAM6H,UAAU,GAAGvF,KAClCoF,SAAU,QAzDG5I,EA8DnBgH,WAAa,WACXhH,EAAKoB,SAAS,CACZ2F,SAAS,KAhEM/G,EAoEnBiH,YAAc,WACZjH,EAAKoB,SAAS,CACZ2F,SAAS,KApEX/G,EAAKkB,MAAQ,CAAE6F,SAAS,EAAOgC,UAAW,GAAImD,SAAU,GAAItD,SAAU,GAAIoC,KAAM,GAAIhC,SAAU,IAF7EhJ,mFAMjBG,KAAKgM,mDAsEL,OACEjI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQtB,KAAK,QAAQE,KAAK,UAAUoC,QAAS/G,KAAK6G,YAAlD,oBAGA9C,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACExB,MAAM,eACNyB,MAAO,IACPxB,UAAU,QACVyB,QAASlH,KAAK8G,YACdK,cAAc,EACdP,QAAS5G,KAAKe,MAAM6F,QACpB1C,MAAO,CACLI,OAAQ,oBACR8C,SAAU,OACVC,cAAe,KAGjBtD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACiI,EAAA,EAAD,CACE5G,SAAUtF,KAAK0L,mBACfxH,MAAO,CAAE+C,MAAO,QAChB5B,aAAcrF,KAAKe,MAAM8H,UAExB7I,KAAKe,MAAM6H,UAAUuD,IAAI,SAACC,EAAMC,GAAP,OACxBtI,EAAAC,EAAAC,cAACiI,EAAA,EAAOI,OAAR,CAAehL,MAAO8K,EAAK/I,KAAMgJ,IAAKA,GAAMD,EAAKvD,cAIvD9E,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CAAOI,YAAY,WAAWjB,KAAK,WAAWpB,SAAUtF,KAAKuG,aAAcjF,MAAOtB,KAAKe,MAAMgL,YAE/FhI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEC,IAAK,EACLC,IAAK,GACLC,aAAc,GACdC,SAAUtF,KAAK2L,sBAGnB5H,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,KACEvD,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CACEC,UAAQ,EAER7E,YAAY,GACZrC,SAAUtF,KAAK4L,iBACfa,KAAMzM,KAAK4L,iBACX1H,MAAO,CAAE+C,MAAO,WAGpBlD,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAKpD,MAAO,CACR+D,SAAU,WACVC,OAAQ,EACRjB,MAAO,OACPkB,UAAW,oBACXrD,QAAS,YACTsD,UAAW,QACXC,KAAM,EACNC,WAAY,OACZC,aAAc,gBAEhBxE,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQ7B,MAAO,CAAEG,YAAa,GAAK0C,QAAS/G,KAAK8G,aAAjD,UACA/C,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUoC,QAAS/G,KAAK6L,cAArC,kBApJezF,aCK3BvD,IAAa2F,OAAO,CAClB/C,UAAW,cACXyC,OAAQ,GACRO,SAAU,QA+JGiE,cA1Jd,SAAAA,EAAY9M,GAAQ,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0M,IACnB7M,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4M,GAAAvM,KAAAH,KAAMJ,KAQN+M,cAAgB,WAChBtM,MAAM,mDACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACLZ,EAAKoB,SAAS,CAAC4I,UAAWpJ,IAC1BZ,EAAK+M,oBAda/M,EAqBpB+M,eAAiB,WAEhB,IADA,IAAIC,EAAgB,GACXzJ,EAAI,EAAGA,EAAIvD,EAAKkB,MAAM8I,UAAU/I,OAAQsC,IACP,OAArCvD,EAAKkB,MAAM8I,UAAUzG,GAAGyF,WAC3BgE,EAAczJ,GAAK,CAClBmG,GAAI1J,EAAKkB,MAAM8I,UAAUzG,GAAGmG,GAC5BwC,SAAQ,GAAAlI,OAAKhE,EAAKkB,MAAM8I,UAAUzG,GAAG2I,UACrClB,KAAM,IAAIiC,KAAKjN,EAAKkB,MAAM8I,UAAUzG,GAAGyH,MACvCpC,SAAQ,GAAA5E,OAAKhE,EAAKkB,MAAM8I,UAAUzG,GAAGqF,UACrCI,SAAQ,GAAAhF,OAAKhE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAAS/G,UAAtC,KAAA+B,OAAmDhE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAAS9G,UAC5FgL,SAAQ,GAAAlJ,OAAKhE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAAS7G,cAAtC,KAAA6B,OAAuDhE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAASzG,QAIjGvC,EAAKoB,SAAS,CAAE+L,mBAAwBH,EAANhJ,YAnCjBhE,EAsCpBgM,aAAe,SAAChD,GACfxI,MAAM,mDACF,CACAkC,OAAQ,OACRC,QAAS,CAACC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAUiG,KAGxBvI,KAAK,SAAAC,GACLV,EAAK8M,gBACL9J,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,+CAlDInD,EAuDpBoN,eAAiB,SAAC3L,GACfjB,MAAK,oDAAAwD,OAAqDvC,GAAS,CAAEiB,OAAQ,WAC1EjC,KAAK,SAAAC,GACJV,EAAK8M,gBACT9J,IAAaC,QAAQ,CACpBC,QAAS,iBACTC,YAAa,8CA7DGnD,EAkEpBgH,WAAa,WACVhH,EAAKoB,SAAS,CACZ2F,SAAS,KApEM/G,EAwEnBiH,YAAc,WACZjH,EAAKoB,SAAS,CACZ2F,SAAS,KA1EM/G,EA8EpBiK,aAAe,SAACC,EAAQC,GACrB,IAAMT,EAAKQ,EAAOR,GAClB,YAAmBU,IAAZD,EAAIT,IAAoBW,OAAOF,EAAIT,GAAIY,eAAeC,WAAWL,EAAOzI,MAAM6I,gBA9EvFtK,EAAKkB,MAAQ,CAAC6F,SAAS,EAAOiD,UAAW,GAAImD,mBAAoB,IAF9CnN,mFAMjBG,KAAK2M,iDA6EE,IAAA7I,EAAA9D,KAEHqK,EAAmB,CAAC,CACzBE,OAAQxG,EAAAC,EAAAC,cAACiJ,EAAD,CAAcrB,aAAc7L,KAAK6L,eACzCvB,QAAS,CAAC,CACTC,OAAQ,WACRC,SAAU,YACR,CACFD,OAAQ,WACRC,SAAU,YACR,CACFD,OAAQ,OACRC,SAAU,OACVC,YAAY,EACZC,KAAM,SAAAV,GACL,OAAOjG,EAAAC,EAAAC,cAAA,WACL0G,IAAOX,EAAIa,MAAMC,OAAO,oBAI1B,CACFP,OAAQ,WACRD,QAAS,CAAC,CACTC,OAAQ,OACJC,SAAU,YACZ,CACFD,OAAQ,WACJC,SAAU,cAEb,CACFD,OAAQ,UACRhG,SAAU,IACV+F,QAAS,CAAC,CACTC,OAAQ,SACRC,SAAU,KACVjG,SAAU,IACVkG,YAAY,EACZQ,UAAU,EACVP,KAAM,SAAAQ,GAAa,IAAX5J,EAAW4J,EAAX5J,MACP,OAAOyC,EAAAC,EAAAC,cAAA,WACNF,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACCF,MAAM,iDACNC,UAAU,WACVE,OAAO,wBACPQ,OAAO,SACPP,UAAW,kBAAM9B,EAAKmJ,eAAe3L,IACrCuE,KAAM9B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,oBAAoBT,MAAO,CAAE4B,MAAO,UAErD/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAQpB,KAAK,UAAUkB,KAAK,SAASpB,KAAK,iBAO7C,OACEV,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,GAAIS,aAAc,IAAKR,WAAY,OAAQC,YAAa,OAAQC,OAAQ,OAAQC,SAAU,SACjHR,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAACmH,EAAA,EAAD,CACChC,KAAMpJ,KAAKe,MAAMiM,mBACjB1C,QAASD,EACTY,UAAU,EACVR,YAAU,EAACe,oBAAqBxL,KAAK8J,aACrCuB,gBAAiB,aApJEjF,+BCTlB+G,UAAYC,IAAYC,gBAAgB1C,MAsD/B2C,cAlDb,SAAAA,EAAYhH,GAAO,IAAAzG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsN,IACjBzN,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwN,GAAAnN,KAAAH,KAAMsG,KAQRiH,cAAgB,WAChBlN,MAAM,mDACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFZ,EAAKoB,SAAS,CAAC4I,UAAWpJ,IAC1BZ,EAAK2N,qBAdU3N,EAkBnB2N,gBAAkB,WAEd,IADF,IAAIC,EAAa,GACNrK,EAAI,EAAGA,EAAIvD,EAAKkB,MAAM8I,UAAU/I,OAAQsC,IACN,OAArCvD,EAAKkB,MAAM8I,UAAUzG,GAAGyF,WAC1B4E,EAAWrK,GAAK,CACdoC,MAAK,GAAA3B,OAAKhE,EAAKkB,MAAM8I,UAAUzG,GAAG2I,SAA7B,UAAAlI,OAA8ChE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAAS/G,UAA/E,KAAA+B,OAA4FhE,EAAKkB,MAAM8I,UAAUzG,GAAGyF,SAAS9G,UAClI2L,MAAO,IAAIZ,KAAKjN,EAAKkB,MAAM8I,UAAUzG,GAAGyH,MACxC8C,IAAK,IAAIb,KAAKjN,EAAKkB,MAAM8I,UAAUzG,GAAGyH,KAA2C,IAAnChL,EAAKkB,MAAM8I,UAAUzG,GAAGqF,UACtEmF,QAAQ,IAIhB/N,EAAKoB,SAAS,CAAE4M,OAAYJ,EAAN5J,YA5BtBhE,EAAKkB,MAAQ,CAAE8I,UAAW,GAAIgE,OAAQ,IAFrBhO,mFAMjBG,KAAKuN,iDA4BL,OACExJ,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,GAAIS,aAAc,IAAKR,WAAY,OAAQC,YAAa,OAAQC,OAAQ,OAAQC,SAAU,SACjHR,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAC6J,EAAA9J,EAAD,CACEmJ,UAAWA,EACXU,OAAQ7N,KAAKe,MAAM8M,OACnBE,YAAa,IAAIjB,KACjBkB,MAAO,CAAC,QAAS,MAAO,QACxBC,cAAc,QACdC,YAAY,gBA7CG9H,sBCuBV+H,mLAxBX,OACEpK,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,UAAW,GAAIC,WAAY,OAAQC,YAAa,OAAQC,OAAQ,OAAQC,SAAU,SAC7FR,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEW,gBAAiB,QAASC,QAAS,GAAIV,WAAY,OAAQC,YAAa,OAAQE,SAAU,MACtGR,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAUC,QAAQ,+BAA+BC,KAAK,aACpDvK,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAeC,IAAKzK,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,WAAWT,MAAO,CAAEuK,SAAU,OAAQ3I,MAAO,YAA5E,2BAAmH/B,EAAAC,EAAAC,cAAA,qBAAnH,wCACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAAO/B,EAAAC,EAAAC,cAAA,sBAA5B,6BACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAArB,cAAuC/B,EAAAC,EAAAC,cAAA,yBAAvC,gBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAArB,cAAuC/B,EAAAC,EAAAC,cAAA,wBAAvC,kBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAArB,cAAuC/B,EAAAC,EAAAC,cAAA,yBAAvC,kBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAArB,cAAuC/B,EAAAC,EAAAC,cAAA,mBAAvC,oBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAeC,IAAKzK,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,aAAaT,MAAO,CAAEuK,SAAU,OAAQ3I,MAAO,UAA9E,YAAoG/B,EAAAC,EAAAC,cAAA,uBAApG,sBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAezI,MAAM,QAArB,cAAuC/B,EAAAC,EAAAC,cAAA,yBAAvC,uBACAF,EAAAC,EAAAC,cAACmK,EAAA,EAASG,KAAV,CAAeC,IAAKzK,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,UAAUT,MAAO,CAAEuK,SAAU,OAAQ3I,MAAO,aAA3E,qCAEF/B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,OAAO+J,MAAM,YAd1B,UAc6C3K,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAACyK,QAAS,SAAvB,OAd7C,mCANYvI,+BC4BLwI,mLAxBX,OAEE7K,EAAAC,EAAAC,cAAC4K,EAAA,EAAD,CAAMP,KAAK,cACTvK,EAAAC,EAAAC,cAAC4K,EAAA,EAAKN,KAAN,CAAWlC,IAAI,QACbtI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,KAAIhL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,OAAO+J,MAAM,UAAUM,aAAa,YAA5D,SAEFjL,EAAAC,EAAAC,cAAC4K,EAAA,EAAKN,KAAN,CAAWlC,IAAI,aACbtI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,cAAahL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,SAAS+J,MAAM,UAAUM,aAAa,YAAvE,cAEFjL,EAAAC,EAAAC,cAAC4K,EAAA,EAAKN,KAAN,CAAWlC,IAAI,aACbtI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,cAAahL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,cAAc+J,MAAM,UAAUM,aAAa,YAA5E,cAEFjL,EAAAC,EAAAC,cAAC4K,EAAA,EAAKN,KAAN,CAAWlC,IAAI,YACbtI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,aAAYhL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,WAAW+J,MAAM,UAAUM,aAAa,YAAxE,aAEFjL,EAAAC,EAAAC,cAAC4K,EAAA,EAAKN,KAAN,CAAWlC,IAAI,SACbtI,EAAAC,EAAAC,cAAC6K,EAAA,EAAD,CAAMC,GAAG,UAAShL,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMlB,KAAK,UAAU+J,MAAM,YAA7C,kBAnBctI,aCiCT6I,sMAzBXC,SAAS1J,MAAQ,4CAIjB,OACEzB,EAAAC,EAAAC,cAAA,OAAKkL,UAAU,OACbpL,EAAAC,EAAAC,cAACmL,EAAA,EAAD,CAAeC,SAAS,+BACtBtL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqL,EAAD,MACAvL,EAAAC,EAAAC,cAACsL,EAAA,EAAD,KACExL,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhQ,IACjCoE,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWjH,IACpC3E,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWjD,IACpC3I,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnC7L,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWxB,IAChCpK,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CAAOK,OAAQ,kBAAM9L,EAAAC,EAAAC,cAAA,kCAI3BF,EAAAC,EAAAC,cAAA,gDAtBUmC,cCCE0J,QACW,cAA7BC,OAAOhD,SAASiD,UAEe,UAA7BD,OAAOhD,SAASiD,UAEhBD,OAAOhD,SAASiD,SAASC,MACvB,2DCZNC,IAASL,OAAO9L,EAAAC,EAAAC,cAACkM,EAAD,MAASjB,SAASkB,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjQ,KAAK,SAAAkQ,GACjCA,EAAaC","file":"static/js/main.b782daf8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Progress, Button, Popconfirm, Icon, Tooltip, Slider, Badge, Spin, Alert, notification } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nvar randomWords = require('random-words');\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(params) {\r\n    super(params);\r\n    let x = 0;\r\n    let t = 30;\r\n\t\tthis.state = { fetchInProgress: true, customersNo: '', target: t, percent: x };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadCustomers();\r\n\t}\r\n\r\n\tloadCustomers = () => {\r\n\t\tfetch('https://customerrest.herokuapp.com/api/customers')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n      let x = Math.round((responseData.content.length * 100 / this.state.target) * 100)/100;\r\n      this.setState({ fetchInProgress: false, customersNo: responseData.content.length, percent: x });\r\n    })\r\n  }\r\n\r\n  handleTargetChange = (value) => {\r\n    let x = Math.round((this.state.customersNo * 100 / value) * 100)/100;\r\n    this.setState({ target: value , percent: x });\r\n  }\r\n\r\n  addCustomer = () => {\r\n    function firstLetterUppercase(randomWord) {\r\n      return randomWord.charAt(0).toUpperCase() + randomWord.slice(1);\r\n    }\r\n    let newCustomer = {\r\n      firstname: firstLetterUppercase(randomWords()),\r\n      lastname: firstLetterUppercase(randomWords()),\r\n      streetaddress: firstLetterUppercase(randomWords()) + ' ' + Math.floor((Math.random() * 99) + 10),\r\n      postcode: Math.floor((Math.random() * 99999) + 10000),\r\n      city: firstLetterUppercase(randomWords()),\r\n      email: randomWords() + '@' + randomWords() + '.com',\r\n      phone: Math.floor((Math.random() * 9999999999) + 1000000000)\r\n    }\r\n\t\tfetch('https://customerrest.herokuapp.com/api/customers',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\t\t\tbody: JSON.stringify(newCustomer)\r\n\t\t\t\t\t\t}\r\n\t\t)\r\n\t\t.then(response => {\r\n\t\t\tthis.loadCustomers();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'A new customer was added to our database.'\r\n\t\t\t});\r\n\t\t})\r\n  }\r\n\r\n  getRandomCustomer = () => {\r\n    fetch('https://customerrest.herokuapp.com/api/customers')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n      // because our backend provider did not expose the customer index directly\r\n      // need to extract the index from the end of each returned link ;p\r\n      let responseArray = [responseData.content];\r\n      let indexArray = [];\r\n      for (let i = 0; i < responseArray[0].length; i++) {\r\n        let link = (responseArray[0][i].links[0].href);\r\n        let index = link.substr(link.lastIndexOf('/') + 1);\r\n        indexArray[i] = index;\r\n      }\r\n      // getting a random element from the index array\r\n      let randomIndex = indexArray[Math.floor(Math.random()*indexArray.length)];\r\n      // calling the Delete function with the random index\r\n      this.deleteCustomer(randomIndex);\r\n    })\r\n  }\r\n\r\n  deleteCustomer = (index) => {\r\n\t\tfetch(`https://customerrest.herokuapp.com/api/customers/${index}`, {method: 'DELETE'})\r\n\t\t.then(response => {\r\n\t\t\tthis.loadCustomers();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'A random customer was kicked out.'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 40, marginLeft: \"auto\", marginRight: \"auto\", height: \"80vh\", maxWidth: \"80vw\" }}>\r\n        <h1>Hello! I am T-Helper.</h1>\r\n        <br />\r\n        <h3>Because even the best personal trainers (such as yourself) need someone to rely on, I shall be your own personal little assistant.</h3>\r\n        <h3>If you need more features or if I am not working properly, please contact my Creator and he will make me better in no time!</h3>\r\n        <br /><br />\r\n        {\r\n          this.state.fetchInProgress ?\r\n            <div>\r\n              <Spin size=\"large\" />\r\n              <br /><br />\r\n              <Alert\r\n                message=\"Loading... please wait.\"\r\n                description=\"Please allow up to 30 seconds for the Heroku dyno to wake up. The Customer-O-Meter&trade; will appear here shortly.\"\r\n                type=\"info\"\r\n              />\r\n            </div>\r\n            :\r\n            <div style={{ marginBottom: 40 }}>\r\n              <div style={{ backgroundColor: \"rgba(255, 255, 255, 0.6)\", padding: 10, marginLeft: \"auto\", marginRight: \"auto\", maxWidth: 500 }}>\r\n                <div><b>Current</b> number of customers in the database = <Badge count={this.state.customersNo} style={{ backgroundColor: \"#1890ff\", boxShadow: \"0 0 0 0\" }} /></div>\r\n                <div><b>Target</b> number of customers (adjust the slider below) = <Badge count={this.state.target} style={{ backgroundColor: \"#52c41a\", boxShadow: \"0 0 0 0\" }} /></div>\r\n              </div>\r\n              <br />\r\n              <div style={{ marginLeft: \"auto\", marginRight: \"auto\", maxWidth: 400 }}>\r\n                <Slider\r\n                  min={1}\r\n                  max={50}\r\n                  defaultValue={30}\r\n                  onChange={this.handleTargetChange}\r\n                />\r\n              </div>\r\n              <br />\r\n              <Tooltip title=\"Instantly add a random customer\" placement=\"left\">\r\n                <Popconfirm\r\n                  title=\"Are you sure you want to create a new customer?\"\r\n                  placement=\"bottomRight\"\r\n                  okText=\"Yes - Insert random customer!\"\r\n                  onConfirm={() => this.addCustomer()}\r\n                  icon={<Icon type=\"question-circle-o\" style={{ color: 'green' }} />}\r\n                >\r\n                  <Button type=\"primary\" shape=\"circle\" size=\"large\" icon=\"plus\" style={{ marginRight: 20 }} />\r\n                </Popconfirm>\r\n              </Tooltip>\r\n              <Progress type=\"circle\" strokeWidth={9} percent={this.state.percent} />\r\n              <Tooltip title=\"Instantly delete a random customer\" placement=\"right\">\r\n                <Popconfirm\r\n                  title=\"Are you sure you want to remove a customer?\"\r\n                  placement=\"bottomLeft\"\r\n                  okText=\"Yes - Delete random customer!\"\r\n                  okType=\"danger\"\r\n                  onConfirm={() => this.getRandomCustomer()}\r\n                  icon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n                >\r\n                  <Button type=\"danger\" shape=\"circle\" size=\"large\" icon=\"minus\" style={{ marginLeft: 20 }} />\r\n                </Popconfirm>\r\n              </Tooltip>\r\n              <br /><br />\r\n              <h3>Customer-O-Meter&trade;</h3>\r\n            </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Drawer, Button, Col, Row, Input, Icon } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nclass SaveCustomer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false,  firstname: '', lastname: '', streetaddress: '', postcode:'', city:'', email:'', phone:'' };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  saveCustomer = () => {\r\n    const newCustomer = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      streetaddress: this.state.streetaddress,\r\n      postcode: this.state.postcode,\r\n      city: this.state.city,\r\n      email: this.state.email,\r\n      phone: this.state.phone\r\n    };\r\n    this.props.saveCustomer(newCustomer);\r\n    this.setState({ visible: false, firstname: '', lastname: '', streetaddress: '', postcode: '', city: '', email: '', phone: '' })\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  \r\n  render() {\r\n\r\n    return(\r\n      <div>\r\n        <Button size=\"small\" type=\"primary\" onClick={this.showDrawer}>\r\n          Add New Customer\r\n        </Button>\r\n        <Drawer\r\n          title=\"New Customer\"\r\n          width={360}\r\n          placement=\"right\"\r\n          onClose={this.closeDrawer}\r\n          maskClosable={false}\r\n          visible={this.state.visible}\r\n          style={{\r\n            height: 'calc(100% - 55px)',\r\n            overflow: 'auto',\r\n            paddingBottom: 53\r\n          }}\r\n        > \r\n          <Row>\r\n            <Input.Group>\r\n              <Col span={12}><Input placeholder=\"First Name\" name=\"firstname\" onChange={this.handleChange} value={this.state.firstname} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} required />} /></Col>\r\n              <Col span={12}><Input placeholder=\"Last Name\" name=\"lastname\" onChange={this.handleChange} value={this.state.lastname} prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} /></Col>\r\n            </Input.Group>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n              <Input.TextArea rows={4} placeholder=\"Address\" name=\"streetaddress\" onChange={this.handleChange} value={this.state.streetaddress} />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Input.Group>\r\n              <Col span={12}><Input placeholder=\"Postcode\" name=\"postcode\" onChange={this.handleChange} value={this.state.postcode}/></Col>\r\n              <Col span={12}><Input placeholder=\"City\" name=\"city\" onChange={this.handleChange} value={this.state.city} /></Col>\r\n            </Input.Group>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n              <Input placeholder=\"Email\" name=\"email\" onChange={this.handleChange} value={this.state.email} />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n              <Input placeholder=\"Phone\" name=\"phone\" addonBefore=\"+358\" onChange={this.handleChange} value={this.state.phone} />\r\n          </Row>\r\n          <br />\r\n          <Row style={{\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e8e8e8',\r\n              padding: '10px 16px',\r\n              textAlign: 'right',\r\n              left: 0,\r\n              background: '#fff',\r\n              borderRadius: '0 0 4px 4px',\r\n            }}>\r\n            <Button style={{ marginRight: 8 }} onClick={this.closeDrawer}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={this.saveCustomer}>Save</Button>\r\n          </Row>\r\n        </Drawer>\r\n\t\t\t</div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveCustomer;","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport moment from 'moment';\r\nimport { Button, Icon, Popconfirm, Tooltip, Drawer, notification } from 'antd';\r\n\r\nimport 'react-table/react-table.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport SaveCustomer from './SaveCustomer.js';\r\n\r\nnotification.config({\r\n  placement: 'bottomRight',\r\n  bottom: 50,\r\n  duration: 4,\r\n});\r\n\r\nclass Customers extends Component {\r\n\r\n\tconstructor(params) {\r\n\t\tsuper(params);\r\n\t\tthis.state = {visible: false, customers: [], trainings: []};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.listCustomers();\r\n\t}\r\n\r\n\tlistCustomers = () => {\r\n\t\tfetch('https://customerrest.herokuapp.com/api/customers')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n\t\t\tthis.setState({customers: responseData.content})\r\n\t\t})\r\n\t}\r\n\r\n\tsaveCustomer = (customer) => {\r\n\t\tfetch('https://customerrest.herokuapp.com/api/customers',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\t\t\tbody: JSON.stringify(customer)\r\n\t\t\t\t\t\t}\r\n\t\t)\r\n\t\t.then(response => {\r\n\t\t\tthis.listCustomers();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'The customer was added to our database.'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\trenderEditable = (cellInfo) => {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{ backgroundColor: \"#fafafa\" }}\r\n\t\t\t\tcontentEditable\r\n\t\t\t\tsuppressContentEditableWarning\r\n\t\t\t\tonBlur={e => {\r\n\t\t\t\t\tconst data = [...this.state.customers];\r\n\t\t\t\t\tdata[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\r\n\t\t\t\t\tthis.setState({ customers: data });\r\n\t\t\t\t}}\r\n\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t__html: this.state.customers[cellInfo.index][cellInfo.column.id]\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\tupdateCustomer = (customer, link) => {\r\n\t\tfetch(link,\r\n\t\t\t\t\t{\r\n\t\t\t\t\tmethod: 'PUT',\r\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\t\tbody: JSON.stringify(customer)\r\n\t\t\t\t\t}\r\n\t\t)\r\n\t\t.then(response => {\r\n\t\t\tthis.listCustomers();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'The customer was updated successfully.'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteCustomer = (link) => {\r\n\t\tfetch(link, {method: 'DELETE'})\r\n\t\t.then(response => {\r\n\t\t\tthis.listCustomers();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'The customer was deleted successfully.'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tshowTrainings = (value) => {\r\n\t\tfetch(value + '/trainings', { method: \"GET\" })\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n\t\t\tthis.setState({visible: true, trainings: responseData.content})\r\n\t\t})\r\n\t}\r\n\t\r\n\tshowDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n\t};\r\n\t\r\n\tfilterMethod = (filter, row) => {\r\n    const id = filter.id\r\n    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n  };\r\n\r\n  render() {\r\n\r\n\t\tconst columnsTrainings = [{\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Activity',\r\n\t\t\t\taccessor: 'activity'\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Duration',\r\n\t\t\t\taccessor: 'duration'\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Date',\r\n\t\t\t\taccessor: 'date',\r\n\t\t\t\tfilterable: false,\r\n\t\t\t\tCell: row => {\r\n\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t{moment(row.original.date).format('D MMM, H:mm')}\r\n\t\t\t\t\t</div>;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}];\r\n\t\t\r\n\t\tconst columnsCustomers = [{\r\n\t\t\tHeader: <SaveCustomer saveCustomer={this.saveCustomer} />,\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'First Name',\r\n\t\t\t\taccessor: 'firstname',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Last Name',\r\n\t\t\t\taccessor: 'lastname',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Trainings',\r\n\t\t\t\taccessor: 'links.0.href',\r\n\t\t\t\tfilterable: false,\r\n\t\t\t\tsortable: false,\r\n\t\t\t\tCell: ({value}) => {\r\n\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t<Tooltip title=\"Customer Training Quick View\">\r\n\t\t\t\t\t\t\t<Button shape=\"circle\" icon=\"user\" size=\"small\" onClick={() => this.showTrainings(value)} />\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</div>;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\tHeader: 'Location',\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Street',\r\n\t\t\t\taccessor: 'streetaddress',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Post Code',\r\n\t\t\t\taccessor: 'postcode',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'City',\r\n\t\t\t\taccessor: 'city',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\tHeader: 'Contact',\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Email',\r\n\t\t\t\taccessor: 'email',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Phone',\r\n\t\t\t\taccessor: 'phone',\r\n\t\t\t\tCell: this.renderEditable\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\tHeader: 'Control',\r\n\t\t\tmaxWidth: 110,\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Edit / Delete',\r\n\t\t\t\taccessor: 'links.0.href',\r\n\t\t\t\tfilterable: false,\r\n\t\t\t\tsortable: false,\r\n\t\t\t\tmaxWidth: 110,\r\n\t\t\t\tCell: ({row, value}) => {\r\n\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t<Button.Group>\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to Update this Customer?\"\r\n\t\t\t\t\t\t\t\tplacement=\"left\"\r\n\t\t\t\t\t\t\t\tokText=\"Yes - Save changes\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => this.updateCustomer(row, value)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"save\" size=\"small\" />\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\t\ttitle=\"Are you sure you want to Delete this Customer?\"\r\n\t\t\t\t\t\t\t\tplacement=\"topRight\"\r\n\t\t\t\t\t\t\t\tokText=\"Yes - Delete customer\"\r\n\t\t\t\t\t\t\t\tokType=\"danger\"\r\n\t\t\t\t\t\t\t\tonConfirm={() => this.deleteCustomer(value)}\r\n\t\t\t\t\t\t\t\ticon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"delete\" size=\"small\" />\r\n\t\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t</div>;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}]\r\n\r\n    return (\r\n      <div style={{ marginTop: 40, marginBottom: 100, marginLeft: \"auto\", marginRight: \"auto\", height: \"80vh\", maxWidth: \"90vw\" }}>\r\n        <h1>Customer List</h1>\r\n\t\t\t\t<Drawer\r\n          title=\"Trainings\"\r\n          width={360}\r\n          placement=\"left\"\r\n          onClose={this.closeDrawer}\r\n          maskClosable={false}\r\n          visible={this.state.visible}\r\n          style={{\r\n            height: 'calc(100% - 55px)',\r\n\t\t\t\t\t\toverflow: 'auto',\r\n\t\t\t\t\t\ttextAlign: 'center',\r\n            paddingBottom: 53\r\n          }}\r\n        > \r\n          <ReactTable\r\n\t\t\t\t\t\tdata={this.state.trainings}\r\n\t\t\t\t\t\tcolumns={columnsTrainings}\r\n\t\t\t\t\t\tsortable={true}\r\n\t\t\t\t\t\tdefaultPageSize={15}\r\n\t\t\t\t\t\tshowPagination={false}\r\n\t\t\t\t\t\tshowPageJump={false}\r\n\t\t\t\t\t/>\r\n        </Drawer>\r\n\t\t\t\t<ReactTable \r\n\t\t\t\t\tdata={this.state.customers}\r\n\t\t\t\t\tcolumns={columnsCustomers}\r\n\t\t\t\t\tsortable={true}\r\n\t\t\t\t\tfilterable defaultFilterMethod={this.filterMethod}\r\n\t\t\t\t\tdefaultPageSize={10}\r\n\t\t\t\t/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Customers;","import React, { Component } from 'react';\r\nimport { Drawer, Button, Row, Input, Select, Slider, DatePicker } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nclass SaveTraining extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, customers: [], activity: '', duration: '', date: '', customer: '' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.importCustomers();\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n  }\r\n\r\n  // seems like some of the Ant Design field types are unable (by design?)\r\n  // to use the field name - so doing the Change handling separately\r\n\r\n  handleSelectChange = (value) => {\r\n    this.setState({ customer: value });\r\n  }\r\n\r\n  handleSliderChange = (value) => {\r\n    this.setState({ duration: value });\r\n  }\r\n\r\n  handleDateChange = (value) => {\r\n    this.setState({ date: value });\r\n  }\r\n\r\n  saveTraining = () => {\r\n    const newTraining = {\r\n      activity: this.state.activity,\r\n      duration: this.state.duration,\r\n      date: this.state.date,\r\n      customer: this.state.customer\r\n    };\r\n    this.props.saveTraining(newTraining);\r\n    this.setState({ visible: false, activity: '', duration: '', date: '', customer: '' })\r\n  }\r\n\r\n  importCustomers = () => {\r\n    fetch('https://customerrest.herokuapp.com/api/customers')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n      for (let i = 0; i < responseData.content.length; i++ ) {\r\n        let customerToAdd = {\r\n          // showing both names in the selection field \r\n          customer: `${responseData.content[i].lastname} ${responseData.content[i].firstname}`,\r\n          link: responseData.content[i].links[0].href\r\n        }\r\n        this.setState({\r\n          customers: [...this.state.customers, customerToAdd]\r\n        })\r\n      }\r\n      // setting a default customer, so the user does not add training\r\n      // to null customer, by mistake\r\n      this.setState({\r\n        customer: this.state.customers[0].link,\r\n        duration: 30\r\n      })\r\n\t\t})\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  \r\n  render() {\r\n\r\n    return(\r\n      <div>\r\n        <Button size=\"small\" type=\"primary\" onClick={this.showDrawer}>\r\n          Add New Training\r\n        </Button>\r\n        <Drawer\r\n          title=\"New Training\"\r\n          width={360}\r\n          placement=\"right\"\r\n          onClose={this.closeDrawer}\r\n          maskClosable={false}\r\n          visible={this.state.visible}\r\n          style={{\r\n            height: 'calc(100% - 55px)',\r\n            overflow: 'auto',\r\n            paddingBottom: 53\r\n          }}\r\n        > \r\n          <Row>\r\n            <h3>Customer:</h3>\r\n            <Select \r\n              onChange={this.handleSelectChange}\r\n              style={{ width: '100%' }}\r\n              defaultValue={this.state.customer}\r\n            >\r\n              {this.state.customers.map((item, key) => (\r\n                <Select.Option value={item.link} key={key}>{item.customer}</Select.Option>\r\n              ))}\r\n            </Select>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <h4>Activity Name</h4>\r\n            <Input placeholder=\"Activity\" name=\"activity\" onChange={this.handleChange} value={this.state.activity} />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <h4>Duration (minutes)</h4>\r\n            <Slider\r\n              min={1}\r\n              max={90}\r\n              defaultValue={30}\r\n              onChange={this.handleSliderChange}\r\n            />\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <h4>Select Date and Time</h4>\r\n            <DatePicker\r\n              showTime\r\n              // format=\"YYYY-MM-DD HH:mm:ss\"\r\n              placeholder=\"\"\r\n              onChange={this.handleDateChange}\r\n              onOk={this.handleDateChange}\r\n              style={{ width: '100%' }}\r\n            />\r\n          </Row>\r\n          <br />\r\n          <Row style={{\r\n              position: 'absolute',\r\n              bottom: 0,\r\n              width: '100%',\r\n              borderTop: '1px solid #e8e8e8',\r\n              padding: '10px 16px',\r\n              textAlign: 'right',\r\n              left: 0,\r\n              background: '#fff',\r\n              borderRadius: '0 0 4px 4px',\r\n            }}>\r\n            <Button style={{ marginRight: 8 }} onClick={this.closeDrawer}>Cancel</Button>\r\n            <Button type=\"primary\" onClick={this.saveTraining}>Save</Button>\r\n          </Row>\r\n        </Drawer>\r\n\t\t\t</div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveTraining;","import React, { Component } from 'react';\r\nimport ReactTable from 'react-table';\r\nimport moment from 'moment';\r\nimport { Button, Icon, Popconfirm, notification } from 'antd';\r\n\r\nimport 'react-table/react-table.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport SaveTraining from './SaveTraining.js';\r\n\r\nnotification.config({\r\n  placement: 'bottomRight',\r\n  bottom: 50,\r\n  duration: 4,\r\n});\r\n\r\nclass Trainings extends Component {\r\n\r\n\tconstructor(params) {\r\n\t\tsuper(params);\r\n\t\tthis.state = {visible: false, trainings: [], properTrainingList: []};\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.listTrainings();\r\n  }\r\n\r\n  listTrainings = () => {\r\n\t\tfetch('https://customerrest.herokuapp.com/gettrainings')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n\t\t\tthis.setState({trainings: responseData});\r\n\t\t\tthis.makeProperList();\r\n\t\t})\r\n\t}\r\n\r\n\t// because the backend allows trainings to be added to NULL customers\r\n\t// and students often do this, in development phase\r\n\t// there is a need to create a proper training list\r\n\tmakeProperList = () => {\r\n\t\tlet trainingArray = [];\r\n\t\tfor (let i = 0; i < this.state.trainings.length; i++) {\r\n\t\t\tif (this.state.trainings[i].customer !== null) {\r\n\t\t\t\ttrainingArray[i] = {\r\n\t\t\t\t\tid: this.state.trainings[i].id,\r\n\t\t\t\t\tactivity: `${this.state.trainings[i].activity}`,\r\n\t\t\t\t\tdate: new Date(this.state.trainings[i].date),\r\n\t\t\t\t\tduration: `${this.state.trainings[i].duration}`,\r\n\t\t\t\t\tcustomer: `${this.state.trainings[i].customer.firstname} ${this.state.trainings[i].customer.lastname}`,\r\n\t\t\t\t\tlocation: `${this.state.trainings[i].customer.streetaddress} ${this.state.trainings[i].customer.city}`\r\n\t\t\t\t}\r\n\t\t\t}\r\n    }\r\n    this.setState({ properTrainingList: [...trainingArray] });\r\n\t}\r\n\t\r\n\tsaveTraining = (customer) => {\r\n\t\tfetch('https://customerrest.herokuapp.com/api/trainings',\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tmethod: 'POST',\r\n\t\t\t\t\t\theaders: {'Content-Type': 'application/json'},\r\n\t\t\t\t\t\tbody: JSON.stringify(customer)\r\n\t\t\t\t\t\t}\r\n\t\t)\r\n\t\t.then(response => {\r\n\t\t\tthis.listTrainings();\r\n\t\t\tnotification.success({\r\n\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\tdescription: 'The training was added to the customer.'\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteTraining = (value) => {\r\n    fetch(`https://customerrest.herokuapp.com/api/trainings/${value}`, { method: \"DELETE\" })\r\n      .then(response => {\r\n        this.listTrainings();\r\n\t\t\t\tnotification.success({\r\n\t\t\t\t\tmessage: 'Task Complete!',\r\n\t\t\t\t\tdescription: 'The training was deleted successfully.'\r\n\t\t\t\t});\r\n      })\r\n  }\r\n\r\n\tshowDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  closeDrawer = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n\t};\r\n\t\r\n\tfilterMethod = (filter, row) => {\r\n    const id = filter.id\r\n    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n  };\r\n  \r\n  render() {\r\n\r\n\t\tconst columnsTrainings = [{\r\n\t\t\tHeader: <SaveTraining saveTraining={this.saveTraining} />,\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Training',\r\n\t\t\t\taccessor: 'activity'\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Duration',\r\n\t\t\t\taccessor: 'duration'\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Date',\r\n\t\t\t\taccessor: 'date',\r\n\t\t\t\tfilterable: false,\r\n\t\t\t\tCell: row => {\r\n\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t{moment(row.date).format('D MMM, H:mm')}\r\n\t\t\t\t\t</div>;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t},\t{\r\n\t\t\tHeader: 'Customer',\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Name',\r\n        accessor: 'customer'\r\n\t\t\t}, {\r\n\t\t\t\tHeader: 'Location',\r\n        accessor: 'location'\r\n\t\t\t}]\r\n\t\t}, {\r\n\t\t\tHeader: 'Control',\r\n\t\t\tmaxWidth: 110,\r\n\t\t\tcolumns: [{\r\n\t\t\t\tHeader: 'Delete',\r\n\t\t\t\taccessor: 'id',\r\n\t\t\t\tmaxWidth: 110,\r\n\t\t\t\tfilterable: false,\r\n\t\t\t\tsortable: false,\r\n\t\t\t\tCell: ({value}) => {\r\n\t\t\t\t\treturn <div>\r\n\t\t\t\t\t\t<Popconfirm\r\n\t\t\t\t\t\t\ttitle=\"Are you sure you want to Delete this Training?\"\r\n\t\t\t\t\t\t\tplacement=\"topRight\"\r\n\t\t\t\t\t\t\tokText=\"Yes - Delete training\"\r\n\t\t\t\t\t\t\tokType=\"danger\"\r\n\t\t\t\t\t\t\tonConfirm={() => this.deleteTraining(value)}\r\n\t\t\t\t\t\t\ticon={<Icon type=\"question-circle-o\" style={{ color: 'red' }} />}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Button type=\"primary\" icon=\"delete\" size=\"small\" />\r\n\t\t\t\t\t\t</Popconfirm>\r\n\t\t\t\t\t</div>;\r\n\t\t\t\t}\r\n\t\t\t}]\r\n\t\t}];\r\n\r\n    return (\r\n      <div style={{ marginTop: 40, marginBottom: 100, marginLeft: \"auto\", marginRight: \"auto\", height: \"80vh\", maxWidth: \"90vw\" }}>\r\n        <h1>Trainings List</h1>\r\n\t\t\t\t<ReactTable \r\n\t\t\t\t\tdata={this.state.properTrainingList}\r\n\t\t\t\t\tcolumns={columnsTrainings}\r\n\t\t\t\t\tsortable={true}\r\n\t\t\t\t\tfilterable defaultFilterMethod={this.filterMethod}\r\n\t\t\t\t\tdefaultPageSize={10}\r\n\t\t\t\t/>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Trainings;","import React, { Component } from 'react';\r\nimport BigCalendar from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst localizer = BigCalendar.momentLocalizer(moment)\r\n\r\nclass MyCalendar extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { trainings: [], events: [] };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadTrainings();\r\n  }\r\n\r\n  loadTrainings = () => {\r\n\t\tfetch('https://customerrest.herokuapp.com/gettrainings')\r\n\t\t.then(response => response.json())\r\n\t\t.then(responseData => {\r\n      this.setState({trainings: responseData});\r\n      this.createEventList();\r\n    })\r\n  }\r\n\r\n  createEventList = () => {\r\n    let eventArray = [];\r\n      for (let i = 0; i < this.state.trainings.length; i++) {\r\n        if (this.state.trainings[i].customer !== null) {\r\n          eventArray[i] = {\r\n            title: `${this.state.trainings[i].activity} with ${this.state.trainings[i].customer.firstname} ${this.state.trainings[i].customer.lastname}`,\r\n            start: new Date(this.state.trainings[i].date),\r\n            end: new Date(this.state.trainings[i].date + (this.state.trainings[i].duration * 60000)),\r\n            allDay: false\r\n          }\r\n        }\r\n      }\r\n    this.setState({ events: [...eventArray] });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: 40, marginBottom: 100, marginLeft: \"auto\", marginRight: \"auto\", height: \"80vh\", maxWidth: \"80vw\" }}>\r\n        <h1>Trainings Calendar</h1>\r\n        <BigCalendar\r\n          localizer={localizer}\r\n          events={this.state.events}\r\n          defaultDate={new Date()}\r\n          views={['month', 'day', 'week']}\r\n          startAccessor=\"start\"\r\n          endAccessor=\"end\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyCalendar;","import React, { Component } from 'react';\r\nimport { Timeline, Icon } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nclass About extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div style={{marginTop: 40, marginLeft: \"auto\", marginRight: \"auto\", height: \"80vh\", maxWidth: \"80vw\" }}>\r\n        <h1>T-Helper</h1>\r\n        <div style={{ backgroundColor: \"white\", padding: 30, marginLeft: \"auto\", marginRight: \"auto\", maxWidth: 700 }}>\r\n          <p>ReactJS School Project</p>\r\n          <br />\r\n          <Timeline pending=\"Waiting on teacher feed-back\" mode=\"alternate\">\r\n            <Timeline.Item dot={<Icon type=\"poweroff\" style={{ fontSize: '20px', color: 'green' }} />}>Project starts based on <b>REST API</b> and back-end documentation provided</Timeline.Item>\r\n            <Timeline.Item color=\"blue\"><b>React App</b> and general project plan</Timeline.Item>\r\n            <Timeline.Item color=\"blue\">Component: <b>React-Router</b>, navigation</Timeline.Item>\r\n            <Timeline.Item color=\"blue\">Component: <b>React-Table</b>, data display</Timeline.Item>\r\n            <Timeline.Item color=\"blue\">Component: <b>Big-Calendar</b>, timed events</Timeline.Item>\r\n            <Timeline.Item color=\"blue\">Component: <b>Moment</b>, data formating</Timeline.Item>\r\n            <Timeline.Item dot={<Icon type=\"ant-design\" style={{ fontSize: '20px', color: 'red' }} />}>Library: <b>Ant Design</b>, front end design</Timeline.Item>\r\n            <Timeline.Item color=\"blue\">Component: <b>Random-Words</b>, new test customer</Timeline.Item>\r\n            <Timeline.Item dot={<Icon type=\"setting\" style={{ fontSize: '20px', color: 'orange' }} />}>Technical testing and deployment</Timeline.Item>\r\n          </Timeline>\r\n          <Icon type=\"mail\" theme=\"twoTone\" /> tudor.<span style={{display: 'none'}}>foo</span>nica@myy.haaga-helia.fi\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Menu, Icon } from 'antd';\r\n\r\nimport 'antd/dist/antd.css';\r\n\r\nclass Navigator extends Component {\r\n\r\n  render() {\r\n    return (\r\n     \r\n      <Menu mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">\r\n          <Link to=\"/\"><Icon type=\"home\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />Home</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"customers\">\r\n          <Link to=\"/customers\"><Icon type=\"idcard\" theme=\"twoTone\" twoToneColor=\"#e2ba14\" />Customers</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"trainings\">\r\n          <Link to=\"/trainings\"><Icon type=\"folder-open\" theme=\"twoTone\" twoToneColor=\"#e2ba14\" />Trainings</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"calendar\">\r\n          <Link to=\"/calendar\"><Icon type=\"schedule\" theme=\"twoTone\" twoToneColor=\"#52c41a\" />Calendar</Link>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"about\">\r\n          <Link to=\"/about\"><Icon type=\"profile\" theme=\"twoTone\" />About</Link>\r\n        </Menu.Item>\r\n      </Menu>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigator;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Home from './components/Home';\nimport Customers from './components/Customers';\nimport Trainings from './components/Trainings';\nimport Calendar from './components/Calendar';\nimport About from './components/About';\nimport Navigator from './components/Navigator';\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount() {\n    document.title = \"T-Helper\"\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter basename='~a1703081/frontend/trainer/'>\n          <div>\n            <Navigator />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/customers\" component={Customers} />\n              <Route path=\"/trainings\" component={Trainings} />\n              <Route path=\"/calendar\" component={Calendar} />\n              <Route path=\"/about\" component={About} />\n              <Route render={() => <h1>Page not found</h1>} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n        <footer>&copy; 2018 - Tudor Nica</footer>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}